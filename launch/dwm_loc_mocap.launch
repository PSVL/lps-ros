<?xml version="1.0"?>
<launch>
  <arg name="frame" default="base_link" />
  <arg name="joy_dev" default="/dev/input/js0" />

  <arg name="uri0" default="radio://0/80/2M/E7E7E7E700" />
  <arg name="x0" default="-1" />
  <arg name="y0" default="2" />
  <arg name="z0" default="1" />

  <param name="robot_description" command="$(find xacro)/xacro.py $(find crazyflie_description)/urdf/crazyflie2.urdf.xacro" />
  <node name="rviz" pkg="rviz" type="rviz"
        args="-d $(find bitcraze_lps_estimator)/data/rvizconfig_with_goal.rviz"/>


  <group ns="crazyflie0">
    <rosparam command="load" file="$(find bitcraze_lps_estimator)/data/anchor_pos_optitrack.yaml" />

    <node pkg="crazyflie_driver" type="crazyflie_add" name="crazyflie_add" output="screen">
      <param name="uri" value="$(arg uri0)" />
      <param name="tf_prefix" value="crazyflie0" />
      <rosparam>
        genericLogTopics: ["log_kfpos", "log_kfqt", "log_range"]
        genericLogTopicFrequencies: [30, 30, 10]
        genericLogTopic_log_kfpos_Variables: ["kalman.stateX", "kalman.stateY", "kalman.stateZ"]
        genericLogTopic_log_kfqt_Variables: ["kalman.q0", "kalman.q1", "kalman.q2", "kalman.q3"]
        genericLogTopic_log_range_Variables: ["range.range"]
      </rosparam>
    </node>

    <node name="joy" pkg="joy" type="joy_node" output="screen">
      <param name="dev" value="$(arg joy_dev)" />
    </node>

    <node name="joystick_controller" pkg="crazyflie_demo" type="controller.py" output="screen">
      <param name="use_crazyflie_controller" value="True" />
    </node>

    <node name="controller_bridge" pkg="bitcraze_lps_estimator" type="crazyflie_controller_bridge.py" output="screen"/>

    <node name="pose" pkg="crazyflie_demo" type="publish_pose_teleop.py" output="screen">
      <param name="name" value="goal" />
      <param name="rate" value="30" />
      <param name="x" value="$(arg x0)" />
      <param name="y" value="$(arg y0)" />
      <param name="z" value="$(arg z0)" />
    </node>

    <node name="lps_efk_bridge" pkg="bitcraze_lps_estimator" type="lps_ekf_bridge.py" output="screen"/>

    <node name="lps_viz" pkg="bitcraze_lps_estimator" type="lps_viz.py" />

    <node name="log_range" pkg="bitcraze_lps_estimator" type="log_range.py" />

    <node name="log_range_bridge" pkg="bitcraze_lps_estimator" type="log_range_bridge.py" />

    <node pkg="tf" type="static_transform_publisher" name="mocap_flie_link_broadcaster" args="0 0 0 0 0 0 1 /crazyflie0 /crazyflie0/vrpn_base_link 100" />

  </group>

  <include file="$(find crazyflie_driver)/launch/crazyflie_server.launch" />

  <arg name="server" default="DESKTOP-C9EN0C5"/>

  <node pkg="vrpn_client_ros" type="vrpn_client_node" name="vrpn_client_node" output="screen">
    <rosparam subst_value="true">
      server: $(arg server)
      port: 3883

      update_frequency: 100.0
      frame_id: optiworld

      # Use the VRPN server's time, or the client's ROS time.
      use_server_time: false
      broadcast_tf: true

      # Must either specify refresh frequency > 0.0, or a list of trackers to create
      refresh_tracker_frequency: 1.0
      #trackers:
      #- FirstTracker
      #- SecondTracker
    </rosparam>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="optitrack_world_link_broadcaster" args= "-0 0 0 0 0 0 /optiworld /world 100"/>


</launch>
